name: Manual Deploy to ECS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging
      image_tag:
        description: 'Docker image tag to deploy (leave empty for latest)'
        required: false
        type: string

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: kesseh-galleries
  ECS_SERVICE: kesseh-galleries-service
  ECS_CLUSTER: kesseh-galleries-cluster
  ECS_TASK_DEFINITION: kesseh-galleries-task
  CONTAINER_NAME: kesseh-galleries

jobs:
  manual-deploy:
    name: Manual Deploy to ECS
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Determine image to deploy
      id: image-info
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        INPUT_TAG: ${{ github.event.inputs.image_tag }}
      run: |
        if [ -n "$INPUT_TAG" ]; then
          IMAGE_TAG="$INPUT_TAG"
        else
          IMAGE_TAG="latest"
        fi
        
        FULL_IMAGE="$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        echo "image=$FULL_IMAGE" >> $GITHUB_OUTPUT
        echo "tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
        
        echo "🚀 Deploying image: $FULL_IMAGE"

    - name: Download current task definition
      run: |
        aws ecs describe-task-definition \
          --task-definition $ECS_TASK_DEFINITION \
          --query taskDefinition \
          --region $AWS_REGION > task-definition.json

    - name: Update task definition with new image
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.image-info.outputs.image }}

    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true

    - name: Deployment Summary
      run: |
        echo "✅ Manual deployment completed!"
        echo "🏷️  Image Tag: ${{ steps.image-info.outputs.tag }}"
        echo "📦 Full Image: ${{ steps.image-info.outputs.image }}"
        echo "🌍 Environment: ${{ github.event.inputs.environment }}"